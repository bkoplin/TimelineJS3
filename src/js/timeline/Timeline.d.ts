// Generated by https://quicktype.io
import type {
  Integer,
  Merge,
  RequireAllOrNone,
  RequireAtLeastOne,
} from 'type-fest'
import type {
  C, F, L, O,
} from 'ts-toolbelt'

export interface TimelineData {
  title: TextObject
  events: TimelineEvent[]
  scale?: 'human' | 'cosmological'
}

export interface Timeline {
  ready: boolean

  on(event: L.UnionOf<['ready', 'dataloaded', 'back_to_start', 'nav_next', 'nav_previous', 'zoom_in', 'zoom_out', 'change', 'dataloaded', 'hash_updated', 'loaded', 'added', 'removed']>, fn: F.Function<any, void>): void

  /** add event with data (see event data format below) */
  add(event: TimelineEvent): void

  /** go to slide at  index */
  goTo(index: Integer<number>): void

  /** go to last slide */
  goToEnd(): void

  /** go to slide with  id */
  goToId(id: string): void

  /** go to next slide */
  goToNext(): void

  /** go to previous slide */
  goToPrev(): void

  /** go to first slide */
  goToStart(): void

  /** remove event by index */
  remove(index: Integer<number>)

  /** remove event by id */
  removeId(id: string)

}

// export interface TL {
//   Timeline: Timeline
// }

export type TimelineClass = C.Class<[HTMLElement, TimelineData, TimelineOptions], Timeline>

export const TL: {
  Timeline: TimelineClass
}

interface TimelineEvent {
  start_date: DateObject
  end_date: DateObject
  location?: Location
  media?: Media
  text: RequireAtLeastOne<TextObject>
  unique_id: string
  group?: string
}

type YearMonthDayObject = RequireAllOrNone<Pick<CoreDateObject, 'year' | 'month' | 'day'>, 'month' | 'day'>

type HourMinuteSecondObject = RequireAllOrNone<Pick<CoreDateObject, 'hour' | 'minute' | 'second'>, 'hour' | 'minute' | 'second'>

type DateObject = O.MergeAll<Pick<CoreDateObject, 'display_date' | 'format'>, [YearMonthDayObject, HourMinuteSecondObject]>

interface CoreDateObject {
  day: number
  display_date: string
  format: string
  hour: number
  millisecond: number
  minute: number
  month: number
  second: number
  year: number
}

export interface CoreDateObject {
  day: number
  display_date: string
  format: string
  hour: number
  millisecond: number
  minute: number
  month: number
  second: number
  year: number
}

export interface Location {
  icon?: string
  lat: number
  lon: number
  line?: boolean
  name: string
  zoom?: number
}

export interface Media {
  caption: string
  credit?: string
  url?: string
  thumbnail?: string
}

export interface TextObject {
  headline?: string
  text?: string
}

/**
 * @description The page [TimelineJS Options](https://timeline.knightlab.com/docs/options.html) describes the available options.
 */
export interface TimelineOptions {
  lang: boolean
  soundcite: any
  script_path?: string
  /**
   * @description The height of the timeline.
   * @default this._el.container.offsetHeight
   * @memberof TimelineOptions
   */
  height?: number
  /**
   * @description The width of the timeline.
   * @default this._el.container.offsetWidth
   * @memberof TimelineOptions
   */
  width?: number
  /**
   * @description If `true`, copious console logging will be enabled.
   * @default false
   * @memberof TimelineOptions
   */
  debug?: boolean
  /**
   * @description May be one of a list of Timeline's "built-in" font sets, or a full or relative URL (ending in .css) which points to a CSS file in the same format as the built-ins. (See the [typography section of     *  "Overriding Timeline's Styles"](https://timeline.knightlab.com/docs/overriding-styles.html#typography) )
   *
   *  The valid values for the built-in fonts are:
   *
   *  * `abril-droidsans`
   *  * `amatic-andika`
   *  * `bevan-pontanosans`
   *  * `bitter-raleway`
   *  * `clicker-garamond`
   *  * `dancing-ledger`
   *  * `default`
   *  * `fjalla-average`
   *  * `georgia-helvetica`
   *  * `lustria-lato`
   *  * `medula-lato`
   *  * `oldstandard`
   *  * `opensans-gentiumbook`
   *  * `playfair-faunaone`
   *  * `playfair`
   *  * `pt`
   *  * `roboto-megrim`
   *  * `rufina-sintony`
   *  * `ubuntu`
   *  * `unicaone-vollkorn`
   * @memberof TimelineOptions
   */
  font?: string
  /**
   * @description If set to `true`, TimelineJS will update the browser URL each time a slide advances, so that people can link directly to specific slides.
   * @default false
   * @memberof TimelineOptions
   */
  hash_bookmark?: boolean
  /**
   * @description RGB values to use for slide backgrounds. Specify as hex code, CSS named color, or a Javascript object with `r`, `g`, and `b` properties from 0-255.
   * @default 'white'
   * @memberof TimelineOptions
   */
  default_bg_color?: { r: number; g: number; b: number } | string
  /**
   * @description How many screen widths wide the timeline should be at first presentation.
   * @default 2
   * @memberof TimelineOptions
   */
  scale_factor?: number
  /**
   * @description The position in the `zoom_sequence` series used to scale the Timeline when it is first created. Takes precedence over `scale_factor`.
   * @memberof TimelineOptions
   */
  initial_zoom?: number
  /**
   * @description Array of values for TimeNav zoom levels. Each value is a `scale_factor`, which means that at any given level, the full timeline would require that many screens to display all events.
   * @default [0.5, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89]
   * @memberof TimelineOptions
   */
  zoom_sequence?: number[]
  layout?: string
  /**
   * @description Display the timeline nav on the `top` or `bottom`.
   * @default 'bottom'
   * @memberof TimelineOptions
   */
  timenav_position?: 'top' | 'bottom'
  /**
   * @description Optimal distance (in pixels) between ticks on axis.
   * @default 100
   * @memberof TimelineOptions
   */
  optimal_tick_width?: number
  /**
   * @description Removing the tl-timeline base class will disable all default stylesheets.
   * @default 'tl-timeline'
   * @memberof TimelineOptions
   */
  base_class?: string
  /**
   * @description The height in pixels of the timeline nav. Takes precedence over `timenav_height_percentage`.
   * @default 150
   * @memberof TimelineOptions
   */
  timenav_height?: null
  /**
   * @description Specify the timeline nav height as a percentage of the screen instead of in pixels.
   * @default 25
   * @memberof TimelineOptions
   */
  timenav_height_percentage?: number
  /**
   * @description Specify the timeline nav height as a percentage of a mobile device screen.
   * @default 40
   * @memberof TimelineOptions
   */
  timenav_mobile_height_percentage?: number
  /**
   * @description The minimum timeline nav height (in pixels).
   * @default 150
   * @memberof TimelineOptions
   */
  timenav_height_min?: number
  /**
   * @description The minimum marker height (in pixels).
   * @default 30
   * @memberof TimelineOptions
   */
  marker_height_min?: number
  /**
   * @description The minimum marker width (in pixels).
   * @default 100
   * @memberof TimelineOptions
   */
  marker_width_min?: number
  /**
   * @description The top and bottom padding (in pixels) for markers.
   * @default 5
   * @memberof TimelineOptions
   */
  marker_padding?: number
  /**
   * @description The first slide to display when the timeline is loaded.
   * @default 0
   * @memberof TimelineOptions
   */
  start_at_slide?: number
  /**
   * @description If true, loads timeline on last slide.
   * @default false
   * @memberof TimelineOptions
   */
  start_at_end?: boolean
  /**
   * @description The height (in pixels) of the menubar
   * @default 0
   * @memberof TimelineOptions
   */
  menubar_height?: number
  /**
   * @description The timeline width for mobile devices.
   * @default 650
   * @memberof TimelineOptions
   */
  skinny_size?: number
  /**
   * @description The timeline width for medium breakpoints
   * @default 800
   * @memberof TimelineOptions
   */
  medium_size?: number
  /**
   * @description Use declared suffix on dates earlier than 0.
   * @default false
   * @memberof TimelineOptions
   */
  use_bc?: boolean
  /**
   * @description Animation duration (in milliseconds).
   * @default 1000
   * @memberof TimelineOptions
   */
  duration?: number
  /**
   * @description Animation easing function
   * @default TL.Ease.easeInOutQuint
   * @memberof TimelineOptions
   */
  ease?: (t: any) => number
  /**
   * @description If `false` disallow dragging (i.e., user navigates by clicking left or right, or clicking on timeline nav)
   * @default true
   * @memberof TimelineOptions
   */
  dragging?: boolean
  trackResize?: boolean
  map_type?: string
  /**
   * @description Padding (in pixels) on the left and right of each slide.
   * @default 100
   * @memberof TimelineOptions
   */
  slide_padding_lr?: number
  /**
   * @description The opacity of slides not currently showing
   * @default "0%"
   * @memberof TimelineOptions
   */
  slide_default_fade?: string
  /**
   * @description Value should be a language code for a translation set included with TimelineJS. See [the Github repository](https://github.com/NUKnightLab/TimelineJS3/tree/master/src/js/language/locale) for the set of supported language codesâ€”to use these, specify the filename without the `.json` extension.
   *
   * Alternatively, you can create your own translation file, for other languages or simply to override the default messages. To do this, specify a URL to a file based on `[en.json](https://github.com/NUKnightLab/TimelineJS3/blob/master/src/js/language/locale/en.json)`. Your URL must end in `.json`.
   * @default "en"
   * @memberof TimelineOptions
   */
  language?: string
  ga_property_id?: null
  /**
   * @description Allow/disallow track events
   * @default ['back_to_start', 'nav_next', 'nav_previous', 'zoom_in', 'zoom_out']
   * @memberof TimelineOptions
   */
  track_events?: Array<['back_to_start', 'nav_next', 'nav_previous', 'zoom_in', 'zoom_out'][number]>
  /**
   * @description Path to custom CSS. See [Overriding Timeline's Styles](https://timeline.knightlab.com/docs/overriding-styles.html)
   * @memberof TimelineOptions
   */
  theme?: null
}
